name: Build App
on:
  pull_request:
    branches:
      - main
      - develop
    types: [closed]

  workflow_dispatch:
    inputs:
      os:
        type: choice
        description: OS to build on. Ubuntu is faster, MacOS supports iOS builds, Windows is unsupported
        options:
          - macos-latest
          - ubuntu-latest
      platform:
        type: choice
        description: Platform to build for
        options:
          - android
          - ios
      profile:
        type: choice
        description: Build profile to use
        options:
          - development
          - preview
          - production

jobs:
  releaseinfo:
    if: ${{ github.event.pull_request.merged }}
    runs-on: 'ubuntu-latest'
    outputs:
      upload_url: ${{ steps.releaseplease.outputs.upload_url }}
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v2
      - name: 🎉 Create release info
        uses: google-github-actions/release-please-action@v3
        id: releaseplease
        with:
          release-type: expo

  packageinfo:
    runs-on: 'ubuntu-latest'
    outputs:
      name: ${{ steps.package.outputs.name }}
      version: ${{ steps.package.outputs.version }}
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v2
      - name: 📦 Get package info
        id: package
        uses: codex-team/action-nodejs-package-info@v1.1
        with:
          path: ${{ github.workspace }}

  build:
    if: ${{ (github.event.pull_request.merged && github.event.pull_request.user.login == 'github-actions[bot]') }}
    runs-on: 'ubuntu-latest'
    needs: [releaseinfo, packageinfo]
    strategy:
      matrix:
        env: ['development', 'preview', 'production']
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v2

      - name: 🏗 Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          cache: yarn

      - name: 🏗 Setup Expo and EAS
        uses: expo/expo-github-action@v7
        with:
          token: ${{ secrets.EXPO_TOKEN }}
          expo-version: latest
          eas-version: latest

      - name: 🏗 Setup EAS local builds
        run: yarn global add eas-cli-local-build-plugin

      - name: 📦 Install dependencies
        run: yarn

      - name: 👷 Build app
        run: |
          eas build --local \
            --non-interactive \
            --output=./app-build \
            --platform=android \
            --profile=${{ matrix.env }}

      - name: 👍 Attach build artifact to release
        if: '${{ needs.releaseinfo.outputs.upload_url }}'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: '${{ needs.releaseinfo.outputs.upload_url }}'
          asset_path: './app-build'
          asset_name: '${{ needs.packageinfo.outputs.name }}-${{ matrix.env }}-${{ needs.packageinfo.outputs.version }}.apk'
          asset_content_type: application/octet-stream

  build-dispatch:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ${{ github.event.inputs.os }}
    needs: packageinfo
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v2

      - name: 🏗 Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          cache: yarn

      - name: 🏗 Setup Expo and EAS
        uses: expo/expo-github-action@v7
        with:
          token: ${{ secrets.EXPO_TOKEN }}
          expo-version: latest
          eas-version: latest

      - name: 🏗 Setup EAS local builds
        run: yarn global add eas-cli-local-build-plugin

      - name: 📦 Install dependencies
        run: yarn

      - name: 👷 Build app
        run: |
          eas build --local \
            --non-interactive \
            --output=./app-build \
            --platform=${{ github.event.inputs.platform }} \
            --profile=${{ github.event.inputs.profile }}

      - name: 📱 Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: '${{ needs.packageinfo.outputs.name }}-${{ github.event.inputs.profile }}-${{ needs.packageinfo.outputs.version }}'
          path: app-build
